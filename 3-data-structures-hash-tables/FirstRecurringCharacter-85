// Google Question
// Given an array = {2, 5, 1, 2, 3, 5, 1, 2, 4};
// It should return 2
//
// Given an array = {2, 1, 1, 2, 3, 5, 1, 2, 4};
// It should return 1
//
// Given an array = {2, 3, 4, 5};
// It should return undefined
using System;
using System.Collections.Generic;


public class FirstRecurringCharacter
{
  public FirstRecurringCharacter()
  {
    // int[] array = {2, 5, 1, 2, 3, 5, 1, 2, 4};
    // int[] array = {2, 1, 1, 2, 3, 5, 1, 2, 4};
    int[] array = {2, 3, 4, 5};
    
    int result = FirstRecurringCharacters(array);
    
    if(result < 0)
    {
      Console.WriteLine("undefined");
    }
    else
    {
      Console.WriteLine(result.ToString());
    }
  }

  /*
  // It is not perfectly right answer // O(n^2)
  int FirstRecurringCharacters(int[] input)
  {
    for(int i = 0; i < input.Length; i++)
    {
      for(int j = i + 1; j < input.Length; j++)
      // i : 0, j : 1, 2, 3, 4, 5, 6, 7, 8, ...
      // i : 1, j : 2, 3, 4, 5, 6, 7, 8, ...
      // i : 2, j : 3, 4, 5, 6, 7, 8, ...
      // Recursive Loop
      {
        if(input[i] == input[j])
        {
          return input[i];
        }
      }
    }    
    return -1;
  }
  */

  // O(n)
  int FirstRecurringCharacters(int[] input)
  {
    List<int> map = new List<int>();

    for(int i = 0; i < input.Length; i++)
    {
      if(map.Contains(input[i]))
      {
        return input[i];
      }
      else
      {
        map.Add(input[i]);
      }
    }
    return -1;
  }
}